{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\news\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Newsitem from './Newsitem';\nimport Spinner from './Spinner';\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  const [articles, setArticles] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0); //function to make titile's first character in uppercase\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  const updateNews = async () => {\n    props.setProgress(15); // api key for top headlines from perticular source\n    // const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=20`\n\n    const url = `https://newsapi.org/v2/everything?q=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=20`;\n    let data = await fetch(url);\n    props.setProgress(30);\n    let parsedData = await data.json();\n    props.setProgress(50);\n    setArticles(parsedData.articles);\n    props.setProgress(75);\n    setTotalResults(parsedData.totalResults);\n    props.setProgress(100);\n  };\n\n  useEffect(() => {\n    document.title = `${capitalizeFirstLetter(props.category)} | ABC News`;\n    updateNews(); // eslint-disable-next-line \n  }, []);\n\n  const fetchMoreData = async () => {\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page + 1}&pageSize=20`;\n    setPage(page + 1); //setPage is used to update the page number but it is taking a liitle time before that url is fetcthing data this is why setPage is blow of url and I use page+1 in url so that it will fetch data till setPage will update to page+1\n\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults(parsedData.totalResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"containerOverflow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text aboutResults\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"text-muted\",\n          children: [\"About \", totalResults.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"), \" results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: articles.length,\n        next: fetchMoreData,\n        hasMore: articles.length !== totalResults,\n        loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this),\n        scrollableTarget: \"containerOverflow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Newsitem, {\n                title: element.title,\n                description: element.description,\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                source: element.source.name,\n                date: element.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(News, \"Yg6gaAc9OU9qI6BiR07rC3nuGZs=\");\n\n_c = News;\nNews.defaultProps = {\n  country: 'in',\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["E:/react/news/src/components/News.js"],"names":["React","useEffect","useState","PropTypes","Newsitem","Spinner","InfiniteScroll","News","props","articles","setArticles","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","category","apiKey","data","fetch","parsedData","json","document","title","fetchMoreData","country","concat","toString","replace","length","map","element","description","urlToImage","author","source","name","publishedAt","defaultProps","propTypes"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Newsitem from './Newsitem'\nimport Spinner from './Spinner'\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport '../App.css'\n\n\nconst News = (props) => {\n    const [articles, setArticles] = useState([]);\n    \n    const [page, setPage] = useState(1);\n    const [totalResults, setTotalResults] = useState(0);\n\n    //function to make titile's first character in uppercase\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    \n    const updateNews = async () => {\n        props.setProgress(15);\n        // api key for top headlines from perticular source\n        // const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=20`\n        const url = `https://newsapi.org/v2/everything?q=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=20`\n        let data = await fetch(url);\n        props.setProgress(30);\n        let parsedData = await data.json();\n        props.setProgress(50);\n        setArticles(parsedData.articles);\n        props.setProgress(75);\n        setTotalResults(parsedData.totalResults);\n        props.setProgress(100);\n    }\n    useEffect(() => {\n        document.title = `${capitalizeFirstLetter(props.category)} | ABC News`;\n        updateNews();\n        // eslint-disable-next-line \n    }, [])\n\n    const fetchMoreData = async () => {\n        const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page+1}&pageSize=20`\n        setPage(page + 1) //setPage is used to update the page number but it is taking a liitle time before that url is fetcthing data this is why setPage is blow of url and I use page+1 in url so that it will fetch data till setPage will update to page+1\n        let data = await fetch(url);\n        let parsedData = await data.json();\n        setArticles(articles.concat(parsedData.articles));\n        setTotalResults(parsedData.totalResults);\n    }\n    return (\n        <>\n            <div className=\"container\" id=\"containerOverflow\">\n            <p className=\"card-text aboutResults\"><small className=\"text-muted\">About {totalResults.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} results</small></p>\n                <InfiniteScroll\n                    dataLength={articles.length}\n                    next={fetchMoreData}\n                    hasMore={articles.length !== totalResults}\n                    loader={<Spinner />}\n                    scrollableTarget=\"containerOverflow\">\n                    <div>\n                        {articles.map((element) => {\n                            return <div key={element.url}>\n                                <Newsitem title={element.title} description={element.description} imageUrl={element.urlToImage} newsUrl={element.url} author={element.author} source={element.source.name} date={element.publishedAt} />\n                            </div>\n                        })}\n                    </div>\n                </InfiniteScroll>\n            </div>\n        </>\n    )\n\n}\nNews.defaultProps = {\n    country: 'in',\n    category: 'general'\n}\n\nNews.propTypes = {\n    country: PropTypes.string,\n    category: PropTypes.string\n}\nexport default News"]},"metadata":{},"sourceType":"module","externalDependencies":[]}